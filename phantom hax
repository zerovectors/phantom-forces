-- ui library creation
local hintmsg = Instance.new("Hint", game.CoreGui)
local attempt = tick()
hintmsg.Text = "Initializing UI Library This Can Take Up To 30 Seconds"
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/framework/master/vect0rs%20hub%20framework%20uwuware%20checkmarks", true))()
local version = "1.2"
local uiname = "Phantom Forces"
local ui = { }
local main = { }
local loopfunctions = { }
local loops = { }
function GetCamera()
	return workspace:FindFirstChildOfClass("Camera")
end
local mouse = game.Players.LocalPlayer:GetMouse()
local TweenService = game:GetService("TweenService")
local Plrs = game.Players
local MyPlr = Plrs.LocalPlayer
local MyCam = GetCamera()
local char = game.Players.LocalPlayer.Character
local Plrs = game:GetService("Players")
local Run = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local PlayerGui = game.Players.LocalPlayer.PlayerGui
local StartGui = game:GetService("StarterGui")
local Teams = game:GetService("Teams")
local g = MyPlr:FindFirstChild("PlayerGui") or MyPlr:WaitForChild("PlayerGui")
local sg = game:GetService("StarterGui")
local ps = game:GetService("Players")
local Light = game:GetService("Lighting")
local HTTP = game:GetService("HttpService")
local UserInput = game:GetService("UserInputService")
local None = Vector3.new()
local rs = game:GetService("ReplicatedStorage")
local deployfunc
local breakwin
local messages_of_the_day = nil
local GetAllPlayerParts

do -- loop functions 
    function loopfunctions:LoopRunning(name)
		return loops[name].Running
	end
	function loopfunctions:CreateLoop(name, func, waitt, ...)
		if loops[name] ~= nil then return end
		loops[name] = { }
		loops[name].Running = false
		loops[name].Destroy = false
		loops[name].Loop = coroutine.create(function(...)
			while true do
				if loops[name].Running then
					func(...)
				end

				if loops[name].Destroy then
					break
				end

				if type(wait) == "userdata" then
					waitt:wait()
				else
					wait(waitt)
				end
			end
		end)
	end
	function loopfunctions:RunLoop(name, func, waitt, ...)
		if loops[name] == nil then
			if func ~= nil then
				self:CreateLoop(name, func, waitt, ...)
			end
		end

		loops[name].Running = true
		local succ, out = coroutine.resume(loops[name].Loop)
		if not succ then
			warn("Loop: " .. tostring(name) .. " ERROR: " .. tostring(out))
		end
	end
	function loopfunctions:StopLoop(name)
		if loops[name] == nil then return end

		loops[name].Running = false
	end
	function loopfunctions:DestroyLoop(name)
		if loops[name] == nil then return end

		self:StopLoop(name)
		loops[name].Destroy = true

		loops[name] = nil
	end
end
do -- loops
    loopfunctions:RunLoop("Version_Check", function()
        local data = loadstring(game:HttpGet("https://pastebin.com/raw/MhwMYaFu", true))()
        messages_of_the_day = data.messages_of_the_day
        data = data["Phantom Forces"]
        local current_version, reason = data.version, data.reason
        if version ~= current_version then
            if data.force_kick then
                MyPlr:Kick("This script has updated, please re-connect. Current Version: " .. tostring(current_version) .. " your version: " .. version .. "\nReason: " .. reason)
            else
                library:SendNotification("Minor script update, restart ROBLOX to get latest version. Reason:" .. reason)
                main:SystemChat("Minor script update, restart ROBLOX to get latest version. Reason:" .. reason)
            end
        end
    end, 160)
    loopfunctions:RunLoop("Auto Respawn", function()
        if library.flags.autorespawn then
            deployfunc.deploy()
        end
    end, Run.RenderStepped)
    loopfunctions:RunLoop("ESP", function()
        pcall(function()
            for a,b in pairs(GetAllPlayerParts()) do
                if tostring(b) == "Head" or tostring(b) == "Torso" or tostring(b) == "HumanoidRootPart" or tostring(b) == "Left Leg"  or tostring(b) == "Right Leg"  or tostring(b) == "Right Arm" or tostring(b) == "Left Arm" then
                    if library.flags.ChamsTog then
                        if tostring(game.Players.LocalPlayer.Team) ~= tostring(b.Parent.Parent) then
                            main:DrawGUI(main.espsettings.Colors.Ally,b,"Friendly")
                        else
                            main:DrawGUI(main.espsettings.Colors.Enemy,b,"Enemy")
                        end
                    else
                        if b:FindFirstChild("Friendly") then
                            b.Friendly:Destroy()
                        end
                        if b:FindFirstChild("Enemy") then
                            b.Enemy:Destroy()
                        end
                    end
                end
            end
        end)
    end, Run.RenderStepped)
    loopfunctions:RunLoop("Tracers", function()
        pcall(function()
            for a,b in pairs(GetAllPlayerParts()) do
                if tostring(b) == "Head" or tostring(b) == "Torso" or tostring(b) == "HumanoidRootPart" or tostring(b) == "Left Leg"  or tostring(b) == "Right Leg"  or tostring(b) == "Right Arm" or tostring(b) == "Left Arm" then
                    if library.flags.TracersTog then
                        beam = Instance.new('Beam', game.Players.LocalPlayer.Character.HumanoidRootPart)
                        beam.Name = 'Beam'
                        beam.FaceCamera = true
                        beam.Width0 = .15
                        beam.Width1 = .15
                        if tostring(game.Players.LocalPlayer.Team) ~= tostring(b.Parent.Parent) then
                            beam.Color = ColorSequence.new(main.espsettings.Colors.Ally, main.espsettings.Colors.Ally)
                        else
                            beam.Color = ColorSequence.new(main.espsettings.Colors.Enemy, main.espsettings.Colors.Enemy)
                        end
                        one = Instance.new('Attachment', game.Players.LocalPlayer.Character.HumanoidRootPart)
                        two = Instance.new('Attachment', b)
                        beam.Attachment0 = one
                        beam.Attachment1 = two
                    else
                        if tostring(b) == "Head" or tostring(b) == "Torso" or tostring(b) == "HumanoidRootPart" or tostring(b) == "Left Leg"  or tostring(b) == "Right Leg"  or tostring(b) == "Right Arm" or tostring(b) == "Left Arm" then
                            if b:FindFirstChild("Attachment") then
                                b.Attachment:Destroy()
                            end
                        end
                    end
                end
            end
        end)
    end, Run.RenderStepped)
    loopfunctions:RunLoop("Camo Hack", function()
        if library.flags.camohack then
            for i,v in pairs(workspace.Camera:GetChildren()) do
                if v.Name == "Right Arm" or v.Name == "Left Arm" then
                else
                    for i2,v2 in pairs(v:GetChildren()) do
                        if v2:IsA("MeshPart") or v2:IsA("Part") or v2:IsA("UnionOperation") then
                            v2.Material = "ForceField"
                        end
                    end
                end
            end
        end
        if library.flags.armhack then
            for i,v in pairs(workspace.Camera:GetChildren()) do
                if v.Name == "Right Arm" or v.Name == "Left Arm" then
                    for i2,v2 in pairs(v:GetChildren()) do
                        if v2:IsA("MeshPart") or v2:IsA("Part") or v2:IsA("UnionOperation") then
                            v2.Material = "ForceField"
                        end
                    end
                end
            end
        end
    end, Run.RenderStepped)
end
do -- main
    main.espsettings = {
        TracersLength = 500;
        CHAMSLength = 500;
        ESPLength = 10000;
        Blacklist = { };
        FriendList = { };
        Colors = {
            Enemy = Color3.fromRGB(221, 3, 255);
            Ally = Color3.fromRGB(255, 51, 255);
            Friend = Color3.fromRGB(255, 51, 255);
            Neutral = Color3.fromRGB(255,255,255);
            ColorOverride = nil;
        };
        CharAddedEvent = { };
        Mob_ESP_CHAMS_Ran_Once = false;
    };
    main.Arguments = { };
    main.VelCap = 5;
    main.JumpBoostAmt = 0.1;
    if main.espsettings.CHAMSLength > 2048 then
        main.espsettings.CHAMSLength = 2048
    end;
    if main.espsettings.TracersLength > 2048 then
        main.espsettings.TracersLength = 2048
    end;
    splitline = Instance.new("Frame")
    main.vflyspeed = 1;
    main.vehicleflyspeed = 1;
    function main:Console(text)
        hintmsg.Text = text
    end
    function main:TypeWriter(label, speed)
		local speed = speed or 2
		local text = label.Text
		label.Text = ""
		spawn(function()
			for i = 1, string.len(text) do
				label.Text = string.sub(text, 1, speed * i)
				wait(0.016666666666666666)
			end
		end)
	end
    function main:SystemChat(txt)
        local misc = rs.Misc
		local chatgui = g.ChatGame
		local msg = misc.Msger
		local message = msg:clone()
		local tag = message.Tag
		local offset = 5
		message.Parent = chatgui.GlobalChat
		message.Text = "Vect0rs; "
		message.Msg.Text = txt
		message.Msg.Position = UDim2.new(0, message.TextBounds.x, 0, 0)
		message.Visible = true
		message.Msg.Visible = true
        main:TypeWriter(message.Msg, 3)
        spawn(function()
			local n = 0
			while message.Parent == chatgui.GlobalChat do
				message.TextColor3 = Color3.fromHSV(n, 0.4, 1)
				n = (n + 0.01) % 1
				Run.RenderStepped:wait()
			end
		end)
    end
    function main:SaveSettings()
        local Name = "Vect0rs Hub/Phantom Forces.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        local function Save()
        writefile(Name,game:service'HttpService':JSONEncode(Settings))
        end
        --[[do -- visuals
            Settings.FullBright = library.flags.FullBright
            Settings.espfoldertog = library.flags.espfoldertog
            Settings.ESPTog = library.flags.ESPTog
            Settings.ChamsTog = library.flags.ChamsTog
            Settings.TracersTog = library.flags.TracersTog
        end]]
        do -- character
            Settings.SuperSpeed = library.flags.SuperSpeed
        end
        do -- miscellaneous
            Settings.lowgrav = library.flags.lowgrav
            Settings.gunmods = library.flags.gunmods
            Settings.rapidfire = library.flags.rapidfire
            Settings.automatic = library.flags.automatic
            Settings.noreload = library.flags.noreload
            Settings.norecoil = library.flags.norecoil
            Settings.nospread = library.flags.nospread
            Settings.fastbullets = library.flags.fastbullets
            Settings.fastequip = library.flags.fastequip
            Settings.instazoom = library.flags.instazoom
        end
        do -- ui settings
            Settings.annoyshit = library.flags.annoyshit
            Settings.CursorTog = library.flags.CursorTog
            Settings.watermark = library.flags.watermark
        end
        Save()
    end
    function main:LoadSettings()
        local Name = "Vect0rs Hub/Phantom Forces.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        --[[do -- visuals
            ui.visuals.fullbright:SetState(Settings.FullBright)
            ui.visuals.espmain:SetState(Settings.espfoldertog)
            ui.visuals.esp:SetState(Settings.ESPTog)
            ui.visuals.chams:SetState(Settings.ChamsTog)
            ui.visuals.tracers:SetState(Settings.TracersTog)
        end]]
        do -- character
            ui.character.superspeed:SetState(Settings.SuperSpeed)
        end
        do -- miscellaneous
            ui.miscellaneous.lowgravity:SetState(Settings.lowgrav)
            ui.miscellaneous.gunmods:SetState(Settings.gunmods)
            ui.miscellaneous.rapidfire:SetState(Settings.rapidfire)
            ui.miscellaneous.automatic:SetState(Settings.automatic)
            ui.miscellaneous.noreload:SetState(Settings.noreload)
            ui.miscellaneous.norecoil:SetState(Settings.norecoil)
            ui.miscellaneous.nospread:SetState(Settings.nospread)
            ui.miscellaneous.fastbullets:SetState(Settings.fastbullets)
            ui.miscellaneous.fastequip:SetState(Settings.fastequip)
            ui.miscellaneous.instazoom:SetState(Settings.instazoom)
        end
        do -- ui settings
            main.uisettings.cursor:SetState(Settings.CursorTog)
            main.uisettings.watermark:SetState(Settings.watermark)
        end
    end
    function main:AutoLoadSettings()
        local Name = "Vect0rs Hub/Phantom Forces.evelynn"
        local Settings
        if not pcall(function() readfile(Name) end) then makefolder("Vect0rs Hub") writefile(Name, game:service'HttpService':JSONEncode(library.flags)) end
        Settings = game:service'HttpService':JSONDecode(readfile(Name))
        game.CoreGui.uwuware.watermark.Text.MouseButton1Down:Connect(function()
            main:LoadSettings()
        end)
    end
    function main:fullbright()
        if library.flags.FullBright then
            local bloom = Instance.new("BloomEffect");
            bloom.Enabled = true;
            bloom.Intensity = 0.55;
            bloom.Size = 30;
            bloom.Threshold = 0.95;
            bloom.Parent = game.Lighting;
            local colorcorrection = Instance.new("ColorCorrectionEffect");
            colorcorrection.Enabled = true;
            colorcorrection.Brightness = 0;
            colorcorrection.Contrast = 0;
            colorcorrection.Saturation = 1;
            colorcorrection.TintColor = Color3.fromRGB(255,255,255);
            colorcorrection.Parent = game.Lighting;
            local sunrays = Instance.new("SunRaysEffect");
            sunrays.Enabled = true;
            sunrays.Intensity = 0.4;
            sunrays.Spread = 1;
            sunrays.Parent = game.Lighting;
        else
            for i,v in pairs(game.Lighting:GetChildren()) do
                if v:IsA("BloomEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
                    v:Destroy();
                end
            end
        end
    end
    function main:DrawGUI(color,pos,name)
        if not pos:FindFirstChild(name) then
            local box = Instance.new("BoxHandleAdornment", pos)
            box.AlwaysOnTop = true
            box.Adornee = pos
            box.Size = pos.Size
            box.Color3 = color
            box.Name = name
            box.ZIndex = 5
        end
    end
    function main:MainESP()
        if library.flags["espfoldertog"] then
            ui.visuals.chams:SetState(true)
            ui.visuals.tracers:SetState(true)
        else
            ui.visuals.chams:SetState(false)
            ui.visuals.tracers:SetState(false)
        end
    end
    function main:superspeed()
        for i,v in next, getgc(true) do -- firerate
            if type(v) == "table" and rawget(v,'name') then
                if library.flags.SuperSpeed then
                    v.walkspeed = 50
                else
                    v.walkspeed = 14
                end
            end
        end
    end
    function main:walkspeed(value)
        for i,v in next, getgc(true) do -- firerate
            if type(v) == "table" and rawget(v,'name') then
                v.walkspeed = value
            end
        end
    end
    function main:lowgravity()
        if library.flags["lowgrav"] then
            workspace.Gravity = 50
        else
            workspace.Gravity = 196
        end
    end
    function main:gravity(val)
        workspace.Gravity = val
    end
    function main.tables()
        for i, v in pairs(getgc(true)) do
            local attempt = tick()
            if type(v) == "table" and rawget(v, "deploy") then
                deployfunc = v
            end
            if (tick() - attempt) >= 5 then
                game.Players.LocalPlayer:Kick("Initializing Failed! Please try again!\nError: 6")
            end
        end
        for i, v in pairs(getgc(true)) do
            local attempt = tick()
            if type(v) == "table" and rawget(v, "effects") then
                breakwin = v.effects.module.breakwindow
            end
            if (tick() - attempt) >= 5 then
                game.Players.LocalPlayer:Kick("Initializing Failed! Please try again!\nError: 5")
            end
        end
        for i, v in pairs(getgc(true)) do
            pcall(function()
                local attempt = tick()
                if type(v) == "function" and debug.getinfo(v).name == "getallparts" then
                    local a = v()
                    if type(a) == "table" then
                        GetAllPlayerParts = v --yes using game function for ESP cuz why not?
                    end
                end
                if (tick() - attempt) >= 5 then
                    game.Players.LocalPlayer:Kick("Initializing Failed! Please try again!\nError: 4")
                end
            end)
        end
    end
    function main:GunMods()
        if library.flags.gunmods then
            ui.miscellaneous.rapidfire:SetState(true)
            ui.miscellaneous.automatic:SetState(true)
            ui.miscellaneous.noreload:SetState(true)
            ui.miscellaneous.norecoil:SetState(true)
            ui.miscellaneous.nospread:SetState(true)
            ui.miscellaneous.fastbullets:SetState(true)
            ui.miscellaneous.fastequip:SetState(true)
            ui.miscellaneous.instazoom:SetState(true)
        else
            ui.miscellaneous.rapidfire:SetState(false)
            ui.miscellaneous.automatic:SetState(false)
            ui.miscellaneous.noreload:SetState(false)
            ui.miscellaneous.norecoil:SetState(false)
            ui.miscellaneous.nospread:SetState(false)
            ui.miscellaneous.fastbullets:SetState(false)
            ui.miscellaneous.fastequip:SetState(false)
            ui.miscellaneous.instazoom:SetState(false)
        end
    end
    function main:CamoHack(val)
        for i,v in pairs(workspace.Camera:GetChildren()) do
            if v.Name == "Right Arm" or v.Name == "Left Arm" then
            else
                for i2,v2 in pairs(v:GetChildren()) do
                    if v2:IsA("MeshPart") or v2:IsA("Part") or v2:IsA("UnionOperation") then
                        v2.Color = val
                    end
                end
            end
        end
    end
    function main:ArmHack(val)
        for i,v in pairs(workspace.Camera:GetChildren()) do
            if v.Name == "Right Arm" or v.Name == "Left Arm" then
                for i2,v2 in pairs(v:GetChildren()) do
                    if v2:IsA("MeshPart") or v2:IsA("Part") or v2:IsA("UnionOperation") then
                        v2.Color = val
                    end
                end
            end
        end
    end
    function main:BreakWindows()
        local attempt = tick()
        for i,v in pairs(workspace.Map:GetDescendants()) do
            if v:IsA("BasePart") and tostring(v) == "Window" then
                breakwin(v, v, nil, true, true,nil,nil,nil)
            end
        end
        if (tick() - attempt) >= 5 then
            game.Players.LocalPlayer:Kick("Initializing Failed! Please try again!\nError: 2")
        end
    end
    getrenv().Fall = false
    local OldFunction
    function HookItNow()
        local attempt = tick()
        local func
        for i, v in pairs(getgc(true)) do
            if type(v) == "function" and debug.getinfo(v).name == "send" then
            func = v
            end
        end
        local OldFunction
        local Hook = function(self, ...)
        local Args = {...}
        local name = Args[1]
        for a,b in pairs(self) do
        self.playerping = self.serverping
        end
        
        if name == 'newpos' then
            --return  yes those kids are smart not letting me make kill all
        end
        if name == 'closeconnection' and _G.Spam == 1 then --anti kick
            return
            end
        if name == 'falldamage' then
            if #Args > 1 and getrenv().Fall then --anti fall damage
                print'done'
                return
            end
        end
        return OldFunction(self, ...)
        end
        OldFunction = hookfunction(func, Hook)
    end
    function main:Bhop()
        local UIS = game:GetService("UserInputService")
        if library.flags["bhop"] then
            main.CurrentVel = 0
            RolvePatch = true
            helper = {
                getChar = function()
                    return game.Players.LocalPlayer.Character
                end
            }
            local function checkOnGround(char)
                local ray = Ray.new(char.HumanoidRootPart.Position,-(char.HumanoidRootPart.CFrame.UpVector * 100))
                local part, pos = workspace:FindPartOnRay(ray,char)
                
                if part then
                    if pos then
                        local farness = math.ceil((char.HumanoidRootPart.Position - pos).Magnitude)
                        if farness > 3 then    -- works with normal blocky r15 avatars.. sooo :l
                            return false
                        elseif farness <= 3 then
                            return true
                        end
                    end
                end
            end
            UIS.JumpRequest:Connect(function()
                if (UIS:IsKeyDown(Enum.KeyCode.W) == false) and (UIS:IsKeyDown(Enum.KeyCode.A) or UIS:IsKeyDown(Enum.KeyCode.D)) == true and main.CurrentVel < main.VelCap then
                    main.CurrentVel = main.CurrentVel + main.JumpBoostAmt
                end
            end)
            local char = helper.getChar()
            char.Humanoid.StateChanged:Connect(function(oldstate,newstate)
                if newstate == Enum.HumanoidStateType.Landed then -- if we've landed after we've jumped then allow us to jump again, essentially breaking the jump cooldown
                    char.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
                end
            end)
            spawn(function()
                while true do
                    local char = helper.getChar()
                    if checkOnGround(char) == false and main.CurrentVel ~= 0 then
                        char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + (char.HumanoidRootPart.CFrame.LookVector * main.CurrentVel/6)
                    end
                    if UIS:IsKeyDown(Enum.KeyCode.Space) == false then
                        main.CurrentVel = 0
                    elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true and UIS:IsKeyDown(Enum.KeyCode.W) then
                        main.CurrentVel = math.clamp(main.CurrentVel - 0.01,0,main.VelCap)
                    elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true then
                        if RolvePatch == true then char.Humanoid.Jump = true end -- patches rolve games
                    end
                    game:GetService("RunService").Stepped:Wait()
                end
            end)
        end
        game.Players.LocalPlayer.CharacterAdded:Connect(function()
            if library.flags["bhop"] then
                main.CurrentVel = 0
                RolvePatch = false
                helper = {
                    getChar = function()
                        return game.Players.LocalPlayer.Character
                    end
                }
                local function checkOnGround(char)
                    local ray = Ray.new(char.HumanoidRootPart.Position,-(char.HumanoidRootPart.CFrame.UpVector * 100))
                    local part, pos = workspace:FindPartOnRay(ray,char)
                    
                    if part then
                        if pos then
                            local farness = math.ceil((char.HumanoidRootPart.Position - pos).Magnitude)
                            if farness > 3 then    -- works with normal blocky r15 avatars.. sooo :l
                                return false
                            elseif farness <= 3 then
                                return true
                            end
                        end
                    end
                end
                UIS.JumpRequest:Connect(function()
                    if (UIS:IsKeyDown(Enum.KeyCode.W) == false) and (UIS:IsKeyDown(Enum.KeyCode.A) or UIS:IsKeyDown(Enum.KeyCode.D)) == true and main.CurrentVel < main.VelCap then
                        main.CurrentVel = main.CurrentVel + main.JumpBoostAmt
                    end
                end)
                local char = helper.getChar()
                char.Humanoid.StateChanged:Connect(function(oldstate,newstate)
                    if newstate == Enum.HumanoidStateType.Landed then -- if we've landed after we've jumped then allow us to jump again, essentially breaking the jump cooldown
                        char.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
                    end
                end)
                spawn(function()
                    while true do
                        local char = helper.getChar()
                        if checkOnGround(char) == false and main.CurrentVel ~= 0 then
                            char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + (char.HumanoidRootPart.CFrame.LookVector * main.CurrentVel/6)
                        end
                        if UIS:IsKeyDown(Enum.KeyCode.Space) == false then
                            main.CurrentVel = 0
                        elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true and UIS:IsKeyDown(Enum.KeyCode.W) then
                            main.CurrentVel = math.clamp(main.CurrentVel - 0.01,0,main.VelCap)
                        elseif UIS:IsKeyDown(Enum.KeyCode.Space) == true then
                            if RolvePatch == true then char.Humanoid.Jump = true end -- patches rolve games
                        end
                        game:GetService("RunService").Stepped:Wait()
                    end
                end)
            end
        end)
    end
    function main:ReJoin()
        game:GetService('TeleportService'):Teleport(game.PlaceId)
    end
    function main:AnnoyingShitToggle()
        if library.flags["annoyshit"] then
            main.uisettings.cursor:SetState(true)
            main.uisettings.watermark:SetState(true)
        else
            main.uisettings.cursor:SetState(false)
            main.uisettings.watermark:SetState(false)
        end
    end
    function main:cursorcolor(val)
        game.CoreGui.uwuware.Cursor.ImageColor3 = val
    end
    function main:StopMsgs()
        if library.flags["msgsoftheday"] then
            loopfunctions:RunLoop("Messages Of The Day")
        else
            loopfunctions:StopLoop("Messages Of The Day")
        end
    end
    function main:Watermark()
        if library.flags["watermark"] then
            game.CoreGui:WaitForChild("uwuware").watermark.Visible = true
        else
            game.CoreGui:WaitForChild("uwuware").watermark.Visible = false
        end
    end
    function main:CursorTog()
        if library.flags["CursorTog"] then
            game.CoreGui.uwuware.Cursor.Visible = library.flags["CursorTog"]
        else
            game.CoreGui.uwuware.Cursor.Visible = library.flags["CursorTog"]
        end
    end
    function main:DeleteSettings()
        delfile("Vect0rs Hub/Vect0rshub.evelynn")
    end
    function main:splitlinecolor(val)
        splitline.BackgroundColor3 = val
    end
    function main:splitlinetransparency(val)
        splitline.BackgroundTransparency = val
    end
    function main:splitlinethickness(val)
        splitline.Size = UDim2.new(0, 1917, 0, val*3)
    end
    function main:loadspy()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/remote-spys/master/sentinel_spy", true))()
    end
    function main:darkdex()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/dex/master/dark%20dex%20v3", true))()
    end
    function main:sentineldex()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/zerovectors/vect0rshub/master/sentinel%20dex", true))()
    end
    function main:getupvals()
        for i,v in next, getgc() do
            if type(v) == "function" then
                local upvals = getupvalues(v)
                for i2, v2 in next, upvals do
                    warn(i2, v2)
                end
            end
        end
    end
    function main:Senvlocation(location)
        if location == nil then return end
        local strArray = location:split(".")
        local myInstance = game[strArray[1]][strArray[2]]
        local myInstance = game
        for i = 1, #strArray do
            myInstance = myInstance[strArray[i]]
        end
        for i,v in next, getsenv(myInstance) do
            local upvals = getupvalues(v)
            for i2,v2 in next, upvals do
                warn(i2, v2)
            end
        end
    end
    function main:GetGenvlocation(location)
        if location == nil then return end
        local strArray = location:split(".")
        local myInstance = game[strArray[1]][strArray[2]]
        local myInstance = game
        for i = 1, #strArray do
            myInstance = myInstance[strArray[i]]
        end
        local module = require(myInstance)
        for i,v in next, module do
            warn(i,v)
        end
    end
    function main:Spooks()
        ui.cursorcolor:SetColor(Color3.fromRGB(0, 102, 0))
        ui.main_colour:SetColor(Color3.fromRGB(255, 128, 0))
        ui.topbarcolor:SetColor(Color3.fromRGB(255, 128, 0))
    end
    Plrs.PlayerAdded:Connect(function(Plr)
        if getrenv().creator_accounts[Plr.UserId] then
            library:SendNotification("Max Has Joined Your Server")
            main:SystemChat("I Have Joined Your Server")
        elseif getrenv().admin_accounts[Plr.UserId] then
            library:SendNotification("Smail Has Joined Your Server!")
            main:SystemChat("Smail Has Joined Your Server")
        end
    end)
    Plrs.PlayerRemoving:Connect(function(Plr)
        if getrenv().creator_accounts[Plr.UserId] then
            library:SendNotification("Max Has Left Your Server!")
            main:SystemChat("I Have Left Your Server")
        elseif getrenv().admin_accounts[Plr.UserId] then
            library:SendNotification("Smail Has Left Your Server!")
            main:SystemChat("Smail Has Left Your Server")
        end
    end)
    function main:onPlayerAdded(plr)
        plr.Chatted:Connect(function (msg)
            main.Arguments = { }
            for Argument in string.gmatch(msg,"[^%s]+") do
                table.insert(main.Arguments,Argument)
            end
            if getrenv().creator_accounts[plr.UserId] then
                if main.Arguments[2] == game.Players.LocalPlayer.Name then
                    if string.gmatch(";kick", msg) then
                        local reason = main.Arguments[3]
                        print(reason)
                        if main.Arguments[2] == game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer:Kick(reason)
                        end
                    end
                end
            elseif getrenv().admin_accounts[plr.UserId] then
                if main.Arguments[2] == game.Players.LocalPlayer.Name then
                    if string.gmatch(";kick", msg) then
                        local reason = main.Arguments[3]
                        print(reason)
                        if main.Arguments[2] == game.Players.LocalPlayer.Name then
                            game.Players.LocalPlayer:Kick(reason)
                        end
                    end
                end
            end
        end)
    end
    for _, plrs in pairs(game.Players:GetPlayers()) do
        main:onPlayerAdded(plrs)
    end
    game.Players.LocalPlayer.CharacterAdded:Connect(function()
        wait(1)
        pcall(function()
            for i,v in next, getgc(true) do -- automatic
                if type(v) == "table" and rawget(v,'name') and rawget(v, "firemodes") then
                    if library.flags.automatic then
                        v.firemodes[1] = true
                        v.firemodes[2] = 3
                        v.firemodes[3] = 1
                    else
                        v.firemodes[1] = 1
                        v.firemodes[2] = 3
                        v.firemodes[3] = 1
                    end
                end
            end
            for i,v in next, getgc(true) do -- no recoil
                if type(v) == "table" and rawget(v,'name') then
                    if library.flags.norecoil then
                        v.camkickmin = None;
                        v.camkickmax = None;
                        v.aimcamkickmin = None;
                        v.aimcamkickmax = None;
                        v.aimtranskickmin = None;
                        v.aimtranskickmax = None;
                        v.transkickmin = None;
                        v.transkickmax = None;
                        v.rotkickmin = None;
                        v.rotkickmax = None;
                        v.aimrotkickmin = None;
                        v.aimrotkickmax = None;
                    else
                        v.camkickmin = Vector3.new(1, -0.6, -0.3)
                        v.camkickmax = Vector3.new(1.2, -0.1, 0.3)
                        v.aimcamkickmin = Vector3.new(0.9, -0.2, -0.5)
                        v.aimcamkickmax = Vector3.new(1.9, 0.3, 0.5)
                        v.aimtranskickmin = Vector3.new(-0.1, 0.5, 4.2)
                        v.aimtranskickmax = Vector3.new(0.1, 1.2, 5.8)
                        v.transkickmin = Vector3.new(-0.5, 0.6, 8.2)
                        v.transkickmax = Vector3.new(0.8, 1.1, 9.8)
                        v.rotkickmin = Vector3.new(0.2, 0.4, -0.5)
                        v.rotkickmax = Vector3.new(1.9, 2.6, 0.5)
                        v.aimrotkickmin = Vector3.new(0.6, 0.1, -0.3)
                        v.aimrotkickmax = Vector3.new(0.9, -0.2, 0.3)
                    end
                end
            end
            for i,v in next, getgc(true) do
                if type(v) == "table" and rawget(v,'name') and rawget(v,'aimsightdata') then
                    if library.flags.norecoil then
                        v.aimsightdata[1].aimcamkickmin = None
                        v.aimsightdata[1].aimcamkickmax = None
                        v.aimsightdata[1].aimrotkickmin = None
                        v.aimsightdata[1].aimranskickmin = None
                    else
                        v.aimsightdata[1].aimcamkickmin = Vector3.new(0.9, -0.2, -0.5)
                        v.aimsightdata[1].aimcamkickmax = Vector3.new(1.9, 0.3, 0.5)
                        v.aimsightdata[1].aimrotkickmin = Vector3.new(0.6, 0.1, -0.3)
                        v.aimsightdata[1].aimranskickmin = Vector3.new(0.9, -0.2, 0.3)
                    end
                end
            end
            for i,v in next, getgc(true) do -- no spread
                if type(v) == "table" and rawget(v,'name') then
                    if library.flags.nospread then
                        v.hipfirespread = 0
                        v.hipfirestability = 0
                    else
                        v.hipfirespread = 0.07
                        v.hipfirestability = 0.75
                    end
                end
            end
            for i,v in next, getgc(true) do -- fast equip
                if type(v) == "table" and rawget(v,'name') then
                    if library.flags.fastequip then
                        v.equipspeed = 500
                        v.cameraspeed = 500
                    else
                        v.equipspeed = 12
                        v.cameraspeed = 12
                    end
                end
            end
            for i,v in next, getgc(true) do -- no gun sway
                if type(v) == "table" and rawget(v,'name') then
                    if library.flag.nogunsway then
                        v.swayamp = 0
                        v.swayspeed  = 0
                        v.steadyspeed  = 0
                        v.breathspeed  = 0
                        v.recoverspeed = 1
                    else
                        v.swayamp = 25
                        v.swayspeed  = 1
                        v.steadyspeed  = 5
                        v.breathspeed  = 0.004
                        v.recoverspeed = 0.005
                    end
                end
            end
            for i,v in next, getgc(true) do -- instant zoom
                if type(v) == "table" and rawget(v,'name') then
                    if library.flags.instazoom then
                        v.magnifyspeed = 500
                        v.aimspeed = 500
                    else
                        v.magnifyspeed = 12
                        v.aimspeed = 15
                    end
                end
            end
            for i,v in next, getgc(true) do -- fast bullets
                if type(v) == "table" and rawget(v,'name') then
                    if library.flags.fastbullets then
                        v.bulletspeed = 5000
                    else
                        v.bulletspeed = 2800
                    end
                end
            end
            for i,v in next, getgc(true) do -- firerate
                if type(v) == "table" and rawget(v,'name') and rawget(v,'aimsightdata') then
                    if library.flags.rapidfire then
                        v.aimsightdata[1].firerate = 2000
                    else
                        v.aimsightdata[1].firerate = 750
                    end
                end
            end
            for i,v in next, getgc(true) do -- no reload
                if type(v) == "table" and rawget(v,'name') and rawget(v,'animations') then
                    if library.flags.noreload then
                        v.animations.reload.timescale = 0
                        v.animations.tacticalreload.timescale = 0
                    else
                        v.animations.reload.timescale = 0.5
                        v.animations.tacticalreload.timescale = 0.5
                    end
                end
            end
        end)
    end)
end
do -- ui
    function ui:Init()
        do -- visuals
            ui.visuals = library:CreateWindow("Visuals")
            ui.visuals.fullbright = ui.visuals:AddToggle({text = "FullBright", flag = "FullBright", callback = function(a)
                library.flags.FullBright = a
                main:fullbright()
            end})
            ui.visuals.espmain = ui.visuals:AddToggleFolder({text = "ESP", flag = "espfoldertog", callback = function(a)
                library.flags["espfoldertog"] = a
                main:MainESP()
            end})
            ui.visuals.chams = ui.visuals.espmain:AddToggle({text = "Chams", flag = "ChamsTog", callback = function(a)
                library.flags.ChamsTog = a
            end})
            ui.visuals.tracers = ui.visuals.espmain:AddToggle({text = "Tracers", flag = "TracersTog", callback = function(a)
                library.flags.TracersTog = a
            end})
            ui.espsettings = ui.visuals:AddFolder("ESP Settings")
            ui.espsettings:AddColor({text = "Ally Color", flag = "allycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Ally = a
            end})
            ui.espsettings:AddColor({text = "Enemy Color", flag = "enemycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Enemy = a
            end})
            ui.espsettings:AddColor({text = "Neutral Color", flag = "enemycolor", color = Color3.fromRGB(221, 3, 255), callback = function(a)
                main.espsettings.Colors.Neutral = a
            end})
        end
        do -- character
            ui.character = library:CreateWindow("Character")
            ui.character.superspeed = ui.character:AddToggle({text = "SuperSpeed", flag = "SuperSpeed", callback = function(a)
                library.flags.SuperSpeed = a
                main:superspeed()
            end})
            ui.character.walkspeed = ui.character:AddSlider({text = "WalkSpeed", value = 14, min = 0, max = 50, callback = function(a) 
                main:walkspeed(a)
            end})
            ui.character.bhop = ui.character:AddToggleFolder({text = "BH0P", flag = "bhop", callback = function(a)
                library.flags["bhop"] = a
                main:Bhop()
            end})
            ui.character.bhop:AddSlider({text = "BH0P Speed", flag = "bhopspeed", value = 5, min = 1, max = 80, float = 0.2, callback = function(a)
                main.VelCap = a
            end})
            ui.character.bhop:AddSlider({text = "BH0P Jump Multiplier", flag = "bhopspeed", value = 0.1, min = 0.1, max = 5, float = 0.1, callback = function(a)
                main.JumpBoostAmt = a
            end})
        end
        do -- miscellaneous
            ui.miscellaneous = library:CreateWindow("Miscellaneous")
            ui.miscellaneous.lowgravity = ui.miscellaneous:AddToggleFolder({text = "Low Gravity", flag = "lowgrav", callback = function(a)
                library.flags["lowgrav"] = a
                main:lowgravity()
            end})
            ui.miscellaneous.lowgravity:AddSlider({text = "Gravity", value = 196, min = 0, max = 196, callback = function(a) 
                main:gravity(a)
            end})
            ui.miscellaneous:AddToggle({text = "Auto-Respawn", flag = "autorespawn", callback = function(a)
                library.flags.autorespawn = a
            end})
            ui.miscellaneous:AddToggle({text = "No Fall Damage", flag = "nofalldamage", callback = function(a)
                getrenv().Fall = a
                HookItNow()
            end})
            ui.miscellaneous.gunmods = ui.miscellaneous:AddToggleFolder({text = "Gun Mods", flag = "gunmods", callback = function(a)
                library.flags.gunmods = a
                main:GunMods()
            end})
            ui.miscellaneous.rapidfire = ui.miscellaneous.gunmods:AddToggle({text = "Rapid Fire", flag = "rapidfire", callback = function(a)
                library.flags.rapidfire = a
            end})
            ui.miscellaneous.automatic = ui.miscellaneous.gunmods:AddToggle({text = "All Guns Auto", flag = "automatic", callback = function(a)
                library.flags.automatic = a
            end})
            ui.miscellaneous.noreload = ui.miscellaneous.gunmods:AddToggle({text = "No Reload", flag = "noreload", callback = function(a)
                library.flags.noreload = a
            end})
            ui.miscellaneous.norecoil = ui.miscellaneous.gunmods:AddToggle({text = "No Recoil", flag = "norecoil", callback = function(a)
                library.flags.norecoil = a
            end})
            ui.miscellaneous.nospread = ui.miscellaneous.gunmods:AddToggle({text = "No Spread", flag = "nospread", callback = function(a)
                library.flags.nospread = a
            end})
            ui.miscellaneous.nogunsway = ui.miscellaneous.gunmods:AddToggle({text = "No Gun Sway", flag = "nogunsway", callback = function(a)
                library.flags.nogunsway = a
            end})
            ui.miscellaneous.fastbullets = ui.miscellaneous.gunmods:AddToggle({text = "Fast Bullets", flag = "fastbullets", callback = function(a)
                library.flags.fastbullets = a
            end})
            ui.miscellaneous.fastequip = ui.miscellaneous.gunmods:AddToggle({text = "Fast Equip", flag = "fastequip", callback = function(a)
                library.flags.fastequip = a
            end})
            ui.miscellaneous.instazoom = ui.miscellaneous.gunmods:AddToggle({text = "Instant Zoom", flag = "instazoom", callback = function(a)
                library.flags.instazoom = a
            end})
            ui.miscellaneous.camohack = ui.miscellaneous:AddToggleFolder({text = "Camo Hack", flag = "camohack", callback = function(a)
                library.flags.camohack = a
            end})
            ui.miscellaneous.camocolour = ui.miscellaneous.camohack:AddColor({text = "Camo Colour", color = Color3.fromRGB(255, 51, 255), callback = function(a)
                main:CamoHack(a)
            end})
            ui.miscellaneous.armhack = ui.miscellaneous:AddToggleFolder({text = "Arm Hack", flag = "armhack", callback = function(a)
                library.flags.armhack = a
            end})
            ui.miscellaneous.armhack = ui.miscellaneous.armhack:AddColor({text = "Arm Colour", color = Color3.fromRGB(255, 51, 255), callback = function(a)
                main:ArmHack(a)
            end})
            ui.miscellaneous:AddButton({text = "Break Windows", callback = function()
                main:BreakWindows()
            end})
            ui.miscellaneous:AddButton({text = "ReJoin", callback = function()
                main:ReJoin()
            end})
        end
        do -- ui settings
            ui.uisettings = library:CreateWindow("UI Settings")
            ui.cursorcolor = ui.uisettings:AddColor({text = "Cursor Color", flag = "cursorcolor", color = Color3.fromRGB(255, 51, 255), callback = function(a)
                main:cursorcolor(a)
            end})
            ui.main_colour = ui.uisettings:AddColor({text = "Main Color", color = Color3.fromRGB(255, 51, 255), callback = function(a)
                getrenv().ui_settings.main_colour = a
            end})
            ui.title_size = ui.uisettings:AddSlider({text = "Title Size", value = 17, min = 10, max = 25, callback = function(a)
                getrenv().ui_settings.title_size = a
            end})
            ui.uisettings:AddSlider({text = "Text Size", value = 16, min = 10, max = 25, callback = function(a)
                getrenv().ui_settings.font_size = a
            end})
            if getrenv().creator_accounts[MyPlr.UserId] or getrenv().admin_accounts[MyPlr.UserId] then
                ui.uisettings.annoyingstuff = ui.uisettings:AddToggleFolder({text = "Shit Smail Hates!", state = true, flag = "annoyshit", callback = function(a)
                    library.flags["annoyshit"] = a
                    main:AnnoyingShitToggle()
                end})
                ui.uisettings.cursor = ui.uisettings.annoyingstuff:AddToggle({text = "Cursor", state = true, flag = "CursorTog", callback = function(a)
                    library.flags["CursorTog"] = a
                    main:CursorTog()
                end})
                ui.uisettings.watermark = ui.uisettings.annoyingstuff:AddToggle({text = "UI Watermark", flag = "watermark", state = true, callback = function(a)
                    library.flags["watermark"] = a
                    main:Watermark()
                end})
            else
                ui.uisettings.watermark = ui.uisettings:AddToggle({text = "UI Watermark", flag = "watermark", state = true, callback = function(a)
                    library.flags["watermark"] = a
                    main:Watermark()
                end})
            end
            ui.togglekey = ui.uisettings:AddBind({text = "Toggle UI", key = "Q", callback = function() 
                library:Close()
            end})
            ui.savesettings = ui.uisettings:AddButton({text = "Save Settings", callback = function()
                main:SaveSettings()
            end})
            ui.deletesettings = ui.uisettings:AddButton({text = "Delete Settings", callback = function()
                main:DeleteSettings()
            end})
            ui.topbar = ui.uisettings:AddFolder("Top Bar")
            ui.topbarcolor = ui.topbar:AddColor({text = "Line Colour", flag = "color", color = Color3.fromRGB(255, 51, 255), callback = function(a)
                main:splitlinecolor(a)
            end})
            ui.topbar:AddSlider({text = "Transparency", value = 0, min = 0, max = 1, float = 0.1, callback = function(a)
                main:splitlinetransparency(a)
            end})
            ui.topbar:AddSlider({text = "Line Thickness", value = 1, min = 1, max = 4, callback = function(a)
                main:splitlinethickness(a)
            end})
        end
        do -- developer options
            if getrenv().creator_accounts[MyPlr.UserId] then
                main.developer = library:CreateWindow("Developer")
                main.developer:AddButton({text = "Remote Spy", callback = function()
                    main:loadspy()
                end})
                main.developer:AddButton({text = "Dark Dex v3", callback = function()
                    main:darkdex()
                end})
                main.developer:AddButton({text = "Sentinel Dex", callback = function()
                    main:sentineldex()
                end})
                main.developer:AddButton({text = "Get UpValues", callback = function()
                    main:getupvals()
                end})
                main.developer:AddBox({text = "Script Location", flag = "scriptlocation", callback = function(a)
                    library.flags["scriptlocation"] = a
                end})
                main.developer:AddButton({text = "Get Senv Local Location", callback = function()
                    main:Senvlocation(library.flags["scriptlocation"])
                end})
                main.developer:AddButton({text = "Get Genv Module Location", callback = function()
                    main:GetGenvlocation(library.flags["scriptlocation"])
                end})
            end
        end
    end
end

main:SystemChat("Okie, gimme a few secs to setup the ui uwu")
main.tables()
if (tick() - attempt) >= 30 then
    game.Players.LocalPlayer:Kick("Initializing Failed! Please try again!\nError: 1")
end
ui:Init()
library:Init()
library:Close()
main:AutoLoadSettings()
main:Console("Initialization Complete, Enjoy 😎")
tick()
hintmsg:Remove()
library:SendNotification("Vect0rs Hub Loaded "..uiname.." v"..version)
main:SystemChat("Andd Done, Have Fun Or Whatever")
main:SystemChat("Loaded "..uiname)
main:SystemChat("Version "..version)
